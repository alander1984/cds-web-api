/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.tech.lmru.auth.grpc.service.generated.impl.Empty', null, global);
goog.exportSymbol('proto.tech.lmru.auth.grpc.service.generated.impl.EntityCreateResponse', null, global);
goog.exportSymbol('proto.tech.lmru.auth.grpc.service.generated.impl.EntityDeleteResponse', null, global);
goog.exportSymbol('proto.tech.lmru.auth.grpc.service.generated.impl.EntityIdRequest', null, global);
goog.exportSymbol('proto.tech.lmru.auth.grpc.service.generated.impl.Permission', null, global);
goog.exportSymbol('proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse', null, global);
goog.exportSymbol('proto.tech.lmru.auth.grpc.service.generated.impl.Role', null, global);
goog.exportSymbol('proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse', null, global);
goog.exportSymbol('proto.tech.lmru.auth.grpc.service.generated.impl.User', null, global);
goog.exportSymbol('proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Empty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tech.lmru.auth.grpc.service.generated.impl.Empty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tech.lmru.auth.grpc.service.generated.impl.Empty.displayName = 'proto.tech.lmru.auth.grpc.service.generated.impl.Empty';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Permission = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tech.lmru.auth.grpc.service.generated.impl.Permission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tech.lmru.auth.grpc.service.generated.impl.Permission.displayName = 'proto.tech.lmru.auth.grpc.service.generated.impl.Permission';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Role = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tech.lmru.auth.grpc.service.generated.impl.Role.repeatedFields_, null);
};
goog.inherits(proto.tech.lmru.auth.grpc.service.generated.impl.Role, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tech.lmru.auth.grpc.service.generated.impl.Role.displayName = 'proto.tech.lmru.auth.grpc.service.generated.impl.Role';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tech.lmru.auth.grpc.service.generated.impl.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tech.lmru.auth.grpc.service.generated.impl.User.repeatedFields_, null);
};
goog.inherits(proto.tech.lmru.auth.grpc.service.generated.impl.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tech.lmru.auth.grpc.service.generated.impl.User.displayName = 'proto.tech.lmru.auth.grpc.service.generated.impl.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tech.lmru.auth.grpc.service.generated.impl.EntityIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tech.lmru.auth.grpc.service.generated.impl.EntityIdRequest.displayName = 'proto.tech.lmru.auth.grpc.service.generated.impl.EntityIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse.repeatedFields_, null);
};
goog.inherits(proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse.displayName = 'proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse.repeatedFields_, null);
};
goog.inherits(proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse.displayName = 'proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse.repeatedFields_, null);
};
goog.inherits(proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse.displayName = 'proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tech.lmru.auth.grpc.service.generated.impl.EntityDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tech.lmru.auth.grpc.service.generated.impl.EntityDeleteResponse.displayName = 'proto.tech.lmru.auth.grpc.service.generated.impl.EntityDeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tech.lmru.auth.grpc.service.generated.impl.EntityCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tech.lmru.auth.grpc.service.generated.impl.EntityCreateResponse.displayName = 'proto.tech.lmru.auth.grpc.service.generated.impl.EntityCreateResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Empty.prototype.toObject = function(opt_includeInstance) {
  return proto.tech.lmru.auth.grpc.service.generated.impl.Empty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.Empty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Empty.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.Empty}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Empty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tech.lmru.auth.grpc.service.generated.impl.Empty;
  return proto.tech.lmru.auth.grpc.service.generated.impl.Empty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.Empty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.Empty}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Empty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Empty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tech.lmru.auth.grpc.service.generated.impl.Empty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.Empty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Empty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Permission.prototype.toObject = function(opt_includeInstance) {
  return proto.tech.lmru.auth.grpc.service.generated.impl.Permission.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.Permission} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Permission.toObject = function(includeInstance, msg) {
  var obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    code: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.Permission}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Permission.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tech.lmru.auth.grpc.service.generated.impl.Permission;
  return proto.tech.lmru.auth.grpc.service.generated.impl.Permission.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.Permission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.Permission}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Permission.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Permission.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tech.lmru.auth.grpc.service.generated.impl.Permission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.Permission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Permission.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Permission.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tech.lmru.auth.grpc.service.generated.impl.Permission.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Permission.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tech.lmru.auth.grpc.service.generated.impl.Permission.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Permission.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.tech.lmru.auth.grpc.service.generated.impl.Permission.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Role.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Role.prototype.toObject = function(opt_includeInstance) {
  return proto.tech.lmru.auth.grpc.service.generated.impl.Role.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.Role} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Role.toObject = function(includeInstance, msg) {
  var obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    code: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    permissionsList: jspb.Message.toObjectList(msg.getPermissionsList(),
    proto.tech.lmru.auth.grpc.service.generated.impl.Permission.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.Role}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Role.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tech.lmru.auth.grpc.service.generated.impl.Role;
  return proto.tech.lmru.auth.grpc.service.generated.impl.Role.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.Role} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.Role}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Role.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = new proto.tech.lmru.auth.grpc.service.generated.impl.Permission;
      reader.readMessage(value,proto.tech.lmru.auth.grpc.service.generated.impl.Permission.deserializeBinaryFromReader);
      msg.addPermissions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Role.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tech.lmru.auth.grpc.service.generated.impl.Role.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.Role} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Role.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPermissionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.tech.lmru.auth.grpc.service.generated.impl.Permission.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Role.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tech.lmru.auth.grpc.service.generated.impl.Role.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Role.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tech.lmru.auth.grpc.service.generated.impl.Role.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Role.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.tech.lmru.auth.grpc.service.generated.impl.Role.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Permission permissions = 4;
 * @return {!Array<!proto.tech.lmru.auth.grpc.service.generated.impl.Permission>}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Role.prototype.getPermissionsList = function() {
  return /** @type{!Array<!proto.tech.lmru.auth.grpc.service.generated.impl.Permission>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tech.lmru.auth.grpc.service.generated.impl.Permission, 4));
};


/** @param {!Array<!proto.tech.lmru.auth.grpc.service.generated.impl.Permission>} value */
proto.tech.lmru.auth.grpc.service.generated.impl.Role.prototype.setPermissionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.Permission=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.Permission}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Role.prototype.addPermissions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.tech.lmru.auth.grpc.service.generated.impl.Permission, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.tech.lmru.auth.grpc.service.generated.impl.Role.prototype.clearPermissionsList = function() {
  this.setPermissionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tech.lmru.auth.grpc.service.generated.impl.User.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.User.prototype.toObject = function(opt_includeInstance) {
  return proto.tech.lmru.auth.grpc.service.generated.impl.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tech.lmru.auth.grpc.service.generated.impl.User.toObject = function(includeInstance, msg) {
  var obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    code: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    rolesList: jspb.Message.toObjectList(msg.getRolesList(),
    proto.tech.lmru.auth.grpc.service.generated.impl.Role.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.User}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tech.lmru.auth.grpc.service.generated.impl.User;
  return proto.tech.lmru.auth.grpc.service.generated.impl.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.User}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = new proto.tech.lmru.auth.grpc.service.generated.impl.Role;
      reader.readMessage(value,proto.tech.lmru.auth.grpc.service.generated.impl.Role.deserializeBinaryFromReader);
      msg.addRoles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tech.lmru.auth.grpc.service.generated.impl.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tech.lmru.auth.grpc.service.generated.impl.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.tech.lmru.auth.grpc.service.generated.impl.Role.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.User.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tech.lmru.auth.grpc.service.generated.impl.User.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.User.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tech.lmru.auth.grpc.service.generated.impl.User.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.User.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.tech.lmru.auth.grpc.service.generated.impl.User.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Role roles = 4;
 * @return {!Array<!proto.tech.lmru.auth.grpc.service.generated.impl.Role>}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.User.prototype.getRolesList = function() {
  return /** @type{!Array<!proto.tech.lmru.auth.grpc.service.generated.impl.Role>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tech.lmru.auth.grpc.service.generated.impl.Role, 4));
};


/** @param {!Array<!proto.tech.lmru.auth.grpc.service.generated.impl.Role>} value */
proto.tech.lmru.auth.grpc.service.generated.impl.User.prototype.setRolesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.Role=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.Role}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.User.prototype.addRoles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.tech.lmru.auth.grpc.service.generated.impl.Role, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.tech.lmru.auth.grpc.service.generated.impl.User.prototype.clearRolesList = function() {
  this.setRolesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tech.lmru.auth.grpc.service.generated.impl.EntityIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.EntityIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityIdRequest.toObject = function(includeInstance, msg) {
  var obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.EntityIdRequest}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tech.lmru.auth.grpc.service.generated.impl.EntityIdRequest;
  return proto.tech.lmru.auth.grpc.service.generated.impl.EntityIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.EntityIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.EntityIdRequest}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tech.lmru.auth.grpc.service.generated.impl.EntityIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.EntityIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityIdRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityIdRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse.toObject = function(includeInstance, msg) {
  var obj = {
    permissionsList: jspb.Message.toObjectList(msg.getPermissionsList(),
    proto.tech.lmru.auth.grpc.service.generated.impl.Permission.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse;
  return proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tech.lmru.auth.grpc.service.generated.impl.Permission;
      reader.readMessage(value,proto.tech.lmru.auth.grpc.service.generated.impl.Permission.deserializeBinaryFromReader);
      msg.addPermissions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPermissionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tech.lmru.auth.grpc.service.generated.impl.Permission.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Permission permissions = 1;
 * @return {!Array<!proto.tech.lmru.auth.grpc.service.generated.impl.Permission>}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse.prototype.getPermissionsList = function() {
  return /** @type{!Array<!proto.tech.lmru.auth.grpc.service.generated.impl.Permission>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tech.lmru.auth.grpc.service.generated.impl.Permission, 1));
};


/** @param {!Array<!proto.tech.lmru.auth.grpc.service.generated.impl.Permission>} value */
proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse.prototype.setPermissionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.Permission=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.Permission}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse.prototype.addPermissions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tech.lmru.auth.grpc.service.generated.impl.Permission, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.tech.lmru.auth.grpc.service.generated.impl.PermissionAllResponse.prototype.clearPermissionsList = function() {
  this.setPermissionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse.toObject = function(includeInstance, msg) {
  var obj = {
    rolesList: jspb.Message.toObjectList(msg.getRolesList(),
    proto.tech.lmru.auth.grpc.service.generated.impl.Role.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse;
  return proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tech.lmru.auth.grpc.service.generated.impl.Role;
      reader.readMessage(value,proto.tech.lmru.auth.grpc.service.generated.impl.Role.deserializeBinaryFromReader);
      msg.addRoles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tech.lmru.auth.grpc.service.generated.impl.Role.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Role roles = 1;
 * @return {!Array<!proto.tech.lmru.auth.grpc.service.generated.impl.Role>}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse.prototype.getRolesList = function() {
  return /** @type{!Array<!proto.tech.lmru.auth.grpc.service.generated.impl.Role>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tech.lmru.auth.grpc.service.generated.impl.Role, 1));
};


/** @param {!Array<!proto.tech.lmru.auth.grpc.service.generated.impl.Role>} value */
proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse.prototype.setRolesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.Role=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.Role}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse.prototype.addRoles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tech.lmru.auth.grpc.service.generated.impl.Role, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.tech.lmru.auth.grpc.service.generated.impl.RoleAllResponse.prototype.clearRolesList = function() {
  this.setRolesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse.toObject = function(includeInstance, msg) {
  var obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.tech.lmru.auth.grpc.service.generated.impl.User.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse;
  return proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tech.lmru.auth.grpc.service.generated.impl.User;
      reader.readMessage(value,proto.tech.lmru.auth.grpc.service.generated.impl.User.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tech.lmru.auth.grpc.service.generated.impl.User.serializeBinaryToWriter
    );
  }
};


/**
 * repeated User users = 1;
 * @return {!Array<!proto.tech.lmru.auth.grpc.service.generated.impl.User>}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.tech.lmru.auth.grpc.service.generated.impl.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tech.lmru.auth.grpc.service.generated.impl.User, 1));
};


/** @param {!Array<!proto.tech.lmru.auth.grpc.service.generated.impl.User>} value */
proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse.prototype.setUsersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.User}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tech.lmru.auth.grpc.service.generated.impl.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.tech.lmru.auth.grpc.service.generated.impl.UserAllResponse.prototype.clearUsersList = function() {
  this.setUsersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tech.lmru.auth.grpc.service.generated.impl.EntityDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.EntityDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityDeleteResponse.toObject = function(includeInstance, msg) {
  var obj = {
    success: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.EntityDeleteResponse}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tech.lmru.auth.grpc.service.generated.impl.EntityDeleteResponse;
  return proto.tech.lmru.auth.grpc.service.generated.impl.EntityDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.EntityDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.EntityDeleteResponse}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tech.lmru.auth.grpc.service.generated.impl.EntityDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.EntityDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityDeleteResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityDeleteResponse.prototype.setSuccess = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tech.lmru.auth.grpc.service.generated.impl.EntityCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.EntityCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityCreateResponse.toObject = function(includeInstance, msg) {
  var obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.EntityCreateResponse}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tech.lmru.auth.grpc.service.generated.impl.EntityCreateResponse;
  return proto.tech.lmru.auth.grpc.service.generated.impl.EntityCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.EntityCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tech.lmru.auth.grpc.service.generated.impl.EntityCreateResponse}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tech.lmru.auth.grpc.service.generated.impl.EntityCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tech.lmru.auth.grpc.service.generated.impl.EntityCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityCreateResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tech.lmru.auth.grpc.service.generated.impl.EntityCreateResponse.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


goog.object.extend(exports, proto.tech.lmru.auth.grpc.service.generated.impl);
